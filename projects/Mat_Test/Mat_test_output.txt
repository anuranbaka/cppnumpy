matrix m
1, 2, 3, 4
5, 6, 7, 8
matrix n
1, 2, 3
matrix x
1, 2, 3
4, 5, 6
7, 8, 9
matrix y
1, 2, 3, 4, 5, 6
7, 8, 9, 10, 11, 12
13, 14, 15, 16, 17, 18
19, 20, 21, 22, 23, 24
transpose of x
1, 4, 7
2, 5, 8
3, 6, 9
transpose of m
1, 5
2, 6
3, 7
4, 8
n + x
2, 4, 6
5, 7, 9
8, 10, 12
transpose of n + x
2, 3, 4
6, 7, 8
10, 11, 12
transpose of x - transpose of n
0, 3, 6
0, 3, 6
0, 3, 6
matrix multiplication n ^ x
30, 36, 42
m.copy(newMat)
1, 2, 3, 4
5, 6, 7, 8
casting matrix x to float using copy()
1, 2, 3
4, 5, 6
7, 8, 9
casting matrix x to float using copy(dest)
1, 2, 3
4, 5, 6
7, 8, 9
m.roi(0,1,1,3)
2, 3
6, 7
-x.roi(1,-1,1)
-5, -6
-8, -9
y.roi(1,3)
7, 8, 9, 10, 11, 12
13, 14, 15, 16, 17, 18
y.roi(1)
7, 8, 9, 10, 11, 12
13, 14, 15, 16, 17, 18
19, 20, 21, 22, 23, 24
x.roi()
1, 2, 3
4, 5, 6
7, 8, 9
m.T()
1, 5
2, 6
3, 7
4, 8
m.T(output)
1, 2, 3, 4
5, 6, 7, 8
x.T()
1, 4, 7
2, 5, 8
3, 6, 9
y.roi(1,3,2,5).scalarFill(0)
1, 2, 3, 4, 5, 6
7, 8, 0, 0, 0, 12
13, 14, 0, 0, 0, 18
19, 20, 21, 22, 23, 24
Printing a 1x1 matrix
5
Printing a 0x0 matrix
(should be nothing above this line)
Set each element of x to a minimum of 4 with broadcast()
4, 4, 4
4, 5, 6
7, 8, 9
broadcast scalar: x + 5
6, 7, 8
9, 10, 11
12, 13, 14
broadcast scalar: 2520 / x
2520, 1260, 840
630, 504, 420
360, 315, 280
1d matrix a
1, 2, 3, 4, 5, 6
1d matrix b
3, 3, 3, 3, 3, 3
1d matrix c
5
empty 1d matrix d
(should be nothing above this line)
a + b (assignment to previously 2d matrix)
4, 5, 6, 7, 8, 9
c - a
4, 3, 2, 1, 0, -1
-a
-1, -2, -3, -4, -5, -6
matrix a, elements 2 to 4
3, 4, 5
a += b
4, 5, 6, 7, 8, 9
a -= b
1, 2, 3, 4, 5, 6
a *= 2
2, 4, 6, 8, 10, 12
a /= 2
1, 2, 3, 4, 5, 6
assignment of a size 3 matrix to 7s
7, 7, 7
broadcast(a,b,Max);
3, 3, 3, 4, 5, 6
broadcast(a,3,Max);
3, 3, 3, 4, 5, 6
broadcast(5,b,Max);
5, 5, 5, 5, 5, 5
8x8 matrix of zeros
0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0, 0
4x5 matrix of ones
1, 1, 1, 1, 1
1, 1, 1, 1, 1
1, 1, 1, 1, 1
1, 1, 1, 1, 1
6x6 identity matrix
1, 0, 0, 0, 0, 0
0, 1, 0, 0, 0, 0
0, 0, 1, 0, 0, 0
0, 0, 0, 1, 0, 0
0, 0, 0, 0, 1, 0
0, 0, 0, 0, 0, 1
4x7 identity matrix with diagonal at 1
0, 1, 0, 0, 0, 0, 0
0, 0, 1, 0, 0, 0, 0
0, 0, 0, 1, 0, 0, 0
0, 0, 0, 0, 1, 0, 0
4x7 identity matrix with diagonal at -2
0, 0, 0, 0, 0, 0, 0
0, 0, 0, 0, 0, 0, 0
1, 0, 0, 0, 0, 0, 0
0, 1, 0, 0, 0, 0, 0
reshape the previous matrix into a 14x2 matrix
0, 0
0, 0
0, 0
0, 0
0, 0
0, 0
0, 0
1, 0
0, 0
0, 0
0, 0
1, 0
0, 0
0, 0
matrix x as a 1d, 9 element matrix
1, 2, 3, 4, 5, 6, 7, 8, 9
taking the two middle rows from y and reshaping to a 6x2 matrix
(legal because full rows are taken and are contiguous)
(Note that the zeros we filled in before are still there)
7, 8
0, 0
0, 12
13, 14
0, 0
0, 18
6 element c-style array wrapped into a 2x3 matrix
1, 2, 3
4, 5, 6
6 element c-style array wrapped into a 2x3 matrix with preset refcount
1, 2, 3
4, 5, 6
boolMat:
1, 1, 0
boolMat & matrix x
1, 1, 0
1, 1, 0
1, 1, 0
matrix x & !boolMat
0, 0, 1
0, 0, 1
0, 0, 1
boolMat | !x
1, 1, 0
1, 1, 0
1, 1, 0
x | boolMat
1, 1, 1
1, 1, 1
1, 1, 1
true & y
1, 1, 1, 1, 1, 1
1, 1, 0, 0, 0, 1
1, 1, 0, 0, 0, 1
1, 1, 1, 1, 1, 1
!y | false
0, 0, 0, 0, 0, 0
0, 0, 1, 1, 1, 0
0, 0, 1, 1, 1, 0
0, 0, 0, 0, 0, 0
!boolMat | true
0, 0, 1
Checking if any elements of !boolMat are true:
At least one is true!
Checking if all elements of y are true:
Nope, at least one is false
Checking if any elements of x are greater than 4:
Some are greater!
Checking if all elements of y are less than 20:
Nope, at least one is greater
Checking if any elements of y are equal to 3:
At least one is 3!
Checking if all elements in x are not equal to 8:
At least one element is an 8!
Matrix of bools representing all values in y < 5
1, 1, 1, 1, 0, 0
0, 0, 1, 1, 1, 0
0, 0, 1, 1, 1, 0
0, 0, 0, 0, 0, 0
Checking if all elements in of an empty matrix are true:
Well, nothing is false, so we're good!
Checking if any elements in an empty matrix are true:
Nope, nothing true here.
Invertible Matrix:
3, 0, 2
2, 0, -2
0, 1, 1
inverse of that matrix
0.2, 0.2, 0
-0.2, 0.3, 1
0.2, -0.3, -0
The dreaded Hilbert matrix:
1, 0.5, 0.333333, 0.25, 0.2
0.5, 0.333333, 0.25, 0.2, 0.166667
0.333333, 0.25, 0.2, 0.166667, 0.142857
0.25, 0.2, 0.166667, 0.142857, 0.125
0.2, 0.166667, 0.142857, 0.125, 0.111111
inverse of the Hilbert matrix
25, -300, 1050, -1400, 630
-300, 4800, -18900, 26880, -12600
1050, -18900, 79380, -117600, 56700
-1400, 26880, -117600, 179200, -88200
630, -12600, 56700, -88200, 44100
